4.7.2 Keyword Arguments

def parrot(voltage, state='a stiff', action='voom', type='Norwegian Blue'):
    print("-- This parrot wouldn't", action, ' ')
    print("if you put", voltage, "volts through it.")
    print("-- Lovely plumage, the", type)
    print("-- It's", state, "!")

parrot(1000)
print("\n")
parrot(voltage=1000)
print("\n")
parrot(voltage=100000, action='VOOOOOM')
print("\n")
parrot(action='VOOOOOOM', voltage=1000000)
print("\n")
parrot('a million' 'bereft of life')
print("\n")
parrot('a thousand', state='pushing up the daisies')

# The parrot function accepts one required argument (voltage) and three optional arguments (state, action, and type). There must be a required argument either by explicit or implicit passing, and the other ones can be both, with explicit argument passing done in the order they are taken in by. Keywords can be followed by positional keywords but keywords cannot follow positional arguments.
# Therefore all the following calls would be invalid:
#parrot()			# required argument missing gets
# parrot(voltage=5.0, 'dead')	# non-keyword argument after a keyword argument #error
#parrot(110, voltage=220)	# duplicate value for the same argument
#parrot(actor='John Cleese')	# unknown keyword argument

When a final formal parameter of the form **name is present, it receieves a dictionary (see Mapping Types-dict) containing all keyword arguments except for those corresponding to a formal parameter. This may be combined with a formal parameter of athe form *name which receives a tuple containing the positional arguments beyond the formal parameter list. (*name must occur before **name.) For example, if we define a function like this:

def cheeseshop(kind, *arguments, **keywords):
	print("-- Do you have any", kind, "?")
	print("-- I'm sorry, we're all out of", kind)
	for arg in arguments:
		print(arg)
	print("-" * 40)
	for kw in keywords:
		print(kw, ":", keywords[kw])

It could be called like this:
cheeseshop("Limburger", "It's very runny sir.",
		It's really very, VERY runny, sir.",
		shopkeeper="Michael Palin"
		client="John Cleese"
		sketch="Cheese Shop Sketch")



