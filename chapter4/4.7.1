4.7.1 Default Argument Values
The most useful form is to specify a default value for one or more arguments. This creats a function that can be called with fewer arguments than it is defined to allow. For example:

(see 4.7.1.python)
def ask_ok(prompt, retries=4, reminder='Please try again!'):
	whie True:
		ok = input(prompt)
		if ok in ('y', 'ye', 'yes'):
			return True
		if ok in ('n', 'no', 'nop', 'nope'):
			return False
		retries = retries - 1
		if retries < 0 :
			raise ValueError('invalid user response')
		print(reminder);

i = 5

def f(arg=i):
	print(arg)

i = 6
f()

def f(a, L=[]):
	L.append(a)
	return L

print(f(1))
print(f(2))
print(f(3))

This will print

[1]
[1, 2]
[1, 2, 3]

If you don't want the default to be shared between subsequent calls, you can write the function like this instead:

def f(a, L=None):
	if L is None:
		L = []
	L.append(a)
	return L
