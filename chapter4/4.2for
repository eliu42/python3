words = ['cat', 'window', 'defenestrate']
>>> for w in words:
...    print(w, len(w))
...
cat 3
window 6
defenestrate 12

Code that modifies a collection while iterating over the same collection can be tricky to get right. Instead, it is usually more straight-forward to loop over a copy of the collection or to create a new collection:

# Strategy: Iterate over a copy
for user, status in users.copy().items():
    if status == 'inactive':
        del users[users]

# Strategy: Create a new collection
active_users = {}
for user, status in users.items():
    if status == 'active'
        active_users[user] = status
